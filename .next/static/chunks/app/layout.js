/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/next-themes/dist/index.module.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-themes/dist/index.module.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: function() { return /* binding */ $; },\n/* harmony export */   useTheme: function() { return /* binding */ y; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nconst c=[\"light\",\"dark\"],i=\"(prefers-color-scheme: dark)\",d=\"undefined\"==typeof window,u=/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0),h={setTheme:e=>{},themes:[]},y=()=>{var e;return null!==(e=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(u))&&void 0!==e?e:h},$=r=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(u)?/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,r.children):/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(f,r),v=[\"light\",\"dark\"],f=({forcedTheme:t,disableTransitionOnChange:n=!1,enableSystem:l=!0,enableColorScheme:m=!0,storageKey:d=\"theme\",themes:h=v,defaultTheme:y=(l?\"system\":\"light\"),attribute:$=\"data-theme\",value:f,children:w,nonce:T})=>{const[E,k]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>S(d,y)),[C,L]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>S(d)),x=f?Object.values(f):h,I=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{let t=e;if(!t)return;\"system\"===e&&l&&(t=p());const r=f?f[t]:t,o=n?b():null,a=document.documentElement;if(\"class\"===$?(a.classList.remove(...x),r&&a.classList.add(r)):r?a.setAttribute($,r):a.removeAttribute($),m){const e=c.includes(y)?y:null,n=c.includes(t)?t:e;a.style.colorScheme=n}null==o||o()},[]),O=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{k(e);try{localStorage.setItem(d,e)}catch(e){}},[t]),M=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{const n=p(e);L(n),\"system\"===E&&l&&!t&&I(\"system\")},[E,t]);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{const e=window.matchMedia(i);return e.addListener(M),M(e),()=>e.removeListener(M)},[M]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{const e=e=>{e.key===d&&O(e.newValue||y)};return window.addEventListener(\"storage\",e),()=>window.removeEventListener(\"storage\",e)},[O]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{I(null!=t?t:E)},[t,E]);const A=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({theme:E,setTheme:O,forcedTheme:t,resolvedTheme:\"system\"===E?C:E,themes:l?[...h,\"system\"]:h,systemTheme:l?C:void 0}),[E,O,t,C,l,h]);/*#__PURE__*/return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(u.Provider,{value:A},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(g,{forcedTheme:t,disableTransitionOnChange:n,enableSystem:l,enableColorScheme:m,storageKey:d,themes:h,defaultTheme:y,attribute:$,value:f,children:w,attrs:x,nonce:T}),w)},g=/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(({forcedTheme:t,storageKey:n,attribute:r,enableSystem:o,enableColorScheme:a,defaultTheme:s,value:l,attrs:m,nonce:d})=>{const u=\"system\"===s,h=\"class\"===r?`var d=document.documentElement,c=d.classList;c.remove(${m.map(e=>`'${e}'`).join(\",\")});`:`var d=document.documentElement,n='${r}',s='setAttribute';`,y=a?c.includes(s)&&s?`if(e==='light'||e==='dark'||!e)d.style.colorScheme=e||'${s}'`:\"if(e==='light'||e==='dark')d.style.colorScheme=e\":\"\",$=(e,t=!1,n=!0)=>{const o=l?l[e]:e,s=t?e+\"|| ''\":`'${o}'`;let m=\"\";return a&&n&&!t&&c.includes(e)&&(m+=`d.style.colorScheme = '${e}';`),\"class\"===r?m+=t||o?`c.add(${s})`:\"null\":o&&(m+=`d[s](n,${s})`),m},v=t?`!function(){${h}${$(t)}}()`:o?`!function(){try{${h}var e=localStorage.getItem('${n}');if('system'===e||(!e&&${u})){var t='${i}',m=window.matchMedia(t);if(m.media!==t||m.matches){${$(\"dark\")}}else{${$(\"light\")}}}else if(e){${l?`var x=${JSON.stringify(l)};`:\"\"}${$(l?\"x[e]\":\"e\",!0)}}${u?\"\":\"else{\"+$(s,!1,!1)+\"}\"}${y}}catch(e){}}()`:`!function(){try{${h}var e=localStorage.getItem('${n}');if(e){${l?`var x=${JSON.stringify(l)};`:\"\"}${$(l?\"x[e]\":\"e\",!0)}}else{${$(s,!1,!1)};}${y}}catch(t){}}();`;/*#__PURE__*/return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"script\",{nonce:d,dangerouslySetInnerHTML:{__html:v}})},()=>!0),S=(e,t)=>{if(d)return;let n;try{n=localStorage.getItem(e)||void 0}catch(e){}return n||t},b=()=>{const e=document.createElement(\"style\");return e.appendChild(document.createTextNode(\"*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")),document.head.appendChild(e),()=>{window.getComputedStyle(document.body),setTimeout(()=>{document.head.removeChild(e)},1)}},p=e=>(e||(e=window.matchMedia(i)),e.matches?\"dark\":\"light\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXRoZW1lcy9kaXN0L2luZGV4Lm1vZHVsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRJLHNHQUFzRyxvREFBQyxZQUFZLGNBQWMsV0FBVyxRQUFRLE1BQU0saUJBQWlCLGlEQUFDLHFCQUFxQixNQUFNLGlEQUFDLGlCQUFpQiwwREFBZSxDQUFDLDJDQUFDLCtCQUErQiwwREFBZSw2QkFBNkIsOE1BQThNLElBQUksV0FBVywrQ0FBQyxtQkFBbUIsK0NBQUMsb0NBQW9DLGtEQUFDLEtBQUssUUFBUSxhQUFhLHlCQUF5Qix5REFBeUQsOEdBQThHLGlEQUFpRCxzQkFBc0IsYUFBYSxPQUFPLGtEQUFDLEtBQUssS0FBSyxJQUFJLDBCQUEwQixXQUFXLFFBQVEsa0RBQUMsS0FBSyxhQUFhLHNDQUFzQyxRQUFRLGdEQUFDLE1BQU0sNkJBQTZCLHFEQUFxRCxNQUFNLGdEQUFDLE1BQU0sWUFBWSw2QkFBNkIsd0ZBQXdGLE1BQU0sZ0RBQUMsTUFBTSxlQUFlLFFBQVEsUUFBUSw4Q0FBQyxPQUFPLGtIQUFrSCxpQkFBaUIsb0JBQW9CLDBEQUFlLGFBQWEsUUFBUSxjQUFjLDBEQUFlLElBQUksaUtBQWlLLEtBQUssZ0JBQWdCLDJDQUFDLEdBQUcsaUhBQWlILElBQUksaUZBQWlGLFdBQVcsYUFBYSxFQUFFLGNBQWMsRUFBRSx1Q0FBdUMsRUFBRSxtQkFBbUIsaUZBQWlGLEVBQUUsMkVBQTJFLG1DQUFtQyxFQUFFLEdBQUcsU0FBUyw4REFBOEQsRUFBRSxFQUFFLGdDQUFnQyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0JBQWtCLEVBQUUsRUFBRSxFQUFFLE1BQU0sbUJBQW1CLElBQUksRUFBRSxFQUFFLDhCQUE4QixFQUFFLEdBQUcsd0JBQXdCLEVBQUUsR0FBRyxTQUFTLEVBQUUseUJBQXlCLDJCQUEyQixFQUFFLFdBQVcsS0FBSyxFQUFFLGFBQWEsV0FBVyxFQUFFLFdBQVcsbUJBQW1CLEtBQUssRUFBRSxvQkFBb0IsRUFBRSxXQUFXLGVBQWUsRUFBRSxFQUFFLEdBQUcsV0FBVyxpQkFBaUIsSUFBSSxFQUFFLEVBQUUsOEJBQThCLEVBQUUsR0FBRyxNQUFNLEVBQUUsV0FBVyxtQkFBbUIsS0FBSyxFQUFFLG9CQUFvQixLQUFLLEVBQUUsYUFBYSxFQUFFLEdBQUcsV0FBVyxHQUFHLEVBQUUsb0JBQW9CLDBEQUFlLFdBQVcsaUNBQWlDLFVBQVUsRUFBRSxtQkFBbUIsWUFBWSxNQUFNLElBQUksa0NBQWtDLFVBQVUsWUFBWSxRQUFRLHdDQUF3QyxnREFBZ0Qsa0NBQWtDLCtCQUErQiw2QkFBNkIsOEJBQThCLDBCQUEwQixzQ0FBc0MsdURBQXVELDZCQUE2QixLQUFLLDZEQUFzRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC10aGVtZXMvZGlzdC9pbmRleC5tb2R1bGUuanM/MmQ3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZSx7dXNlQ29udGV4dCBhcyB0LEZyYWdtZW50IGFzIG4sdXNlU3RhdGUgYXMgcix1c2VDYWxsYmFjayBhcyBvLHVzZUVmZmVjdCBhcyBhLHVzZU1lbW8gYXMgcyxtZW1vIGFzIGwsY3JlYXRlQ29udGV4dCBhcyBtfWZyb21cInJlYWN0XCI7Y29uc3QgYz1bXCJsaWdodFwiLFwiZGFya1wiXSxpPVwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiLGQ9XCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvdyx1PS8qI19fUFVSRV9fKi9tKHZvaWQgMCksaD17c2V0VGhlbWU6ZT0+e30sdGhlbWVzOltdfSx5PSgpPT57dmFyIGU7cmV0dXJuIG51bGwhPT0oZT10KHUpKSYmdm9pZCAwIT09ZT9lOmh9LCQ9cj0+dCh1KT8vKiNfX1BVUkVfXyovZS5jcmVhdGVFbGVtZW50KG4sbnVsbCxyLmNoaWxkcmVuKTovKiNfX1BVUkVfXyovZS5jcmVhdGVFbGVtZW50KGYsciksdj1bXCJsaWdodFwiLFwiZGFya1wiXSxmPSh7Zm9yY2VkVGhlbWU6dCxkaXNhYmxlVHJhbnNpdGlvbk9uQ2hhbmdlOm49ITEsZW5hYmxlU3lzdGVtOmw9ITAsZW5hYmxlQ29sb3JTY2hlbWU6bT0hMCxzdG9yYWdlS2V5OmQ9XCJ0aGVtZVwiLHRoZW1lczpoPXYsZGVmYXVsdFRoZW1lOnk9KGw/XCJzeXN0ZW1cIjpcImxpZ2h0XCIpLGF0dHJpYnV0ZTokPVwiZGF0YS10aGVtZVwiLHZhbHVlOmYsY2hpbGRyZW46dyxub25jZTpUfSk9Pntjb25zdFtFLGtdPXIoKCk9PlMoZCx5KSksW0MsTF09cigoKT0+UyhkKSkseD1mP09iamVjdC52YWx1ZXMoZik6aCxJPW8oZT0+e2xldCB0PWU7aWYoIXQpcmV0dXJuO1wic3lzdGVtXCI9PT1lJiZsJiYodD1wKCkpO2NvbnN0IHI9Zj9mW3RdOnQsbz1uP2IoKTpudWxsLGE9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O2lmKFwiY2xhc3NcIj09PSQ/KGEuY2xhc3NMaXN0LnJlbW92ZSguLi54KSxyJiZhLmNsYXNzTGlzdC5hZGQocikpOnI/YS5zZXRBdHRyaWJ1dGUoJCxyKTphLnJlbW92ZUF0dHJpYnV0ZSgkKSxtKXtjb25zdCBlPWMuaW5jbHVkZXMoeSk/eTpudWxsLG49Yy5pbmNsdWRlcyh0KT90OmU7YS5zdHlsZS5jb2xvclNjaGVtZT1ufW51bGw9PW98fG8oKX0sW10pLE89byhlPT57ayhlKTt0cnl7bG9jYWxTdG9yYWdlLnNldEl0ZW0oZCxlKX1jYXRjaChlKXt9fSxbdF0pLE09byhlPT57Y29uc3Qgbj1wKGUpO0wobiksXCJzeXN0ZW1cIj09PUUmJmwmJiF0JiZJKFwic3lzdGVtXCIpfSxbRSx0XSk7YSgoKT0+e2NvbnN0IGU9d2luZG93Lm1hdGNoTWVkaWEoaSk7cmV0dXJuIGUuYWRkTGlzdGVuZXIoTSksTShlKSwoKT0+ZS5yZW1vdmVMaXN0ZW5lcihNKX0sW01dKSxhKCgpPT57Y29uc3QgZT1lPT57ZS5rZXk9PT1kJiZPKGUubmV3VmFsdWV8fHkpfTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsZSksKCk9PndpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RvcmFnZVwiLGUpfSxbT10pLGEoKCk9PntJKG51bGwhPXQ/dDpFKX0sW3QsRV0pO2NvbnN0IEE9cygoKT0+KHt0aGVtZTpFLHNldFRoZW1lOk8sZm9yY2VkVGhlbWU6dCxyZXNvbHZlZFRoZW1lOlwic3lzdGVtXCI9PT1FP0M6RSx0aGVtZXM6bD9bLi4uaCxcInN5c3RlbVwiXTpoLHN5c3RlbVRoZW1lOmw/Qzp2b2lkIDB9KSxbRSxPLHQsQyxsLGhdKTsvKiNfX1BVUkVfXyovcmV0dXJuIGUuY3JlYXRlRWxlbWVudCh1LlByb3ZpZGVyLHt2YWx1ZTpBfSwvKiNfX1BVUkVfXyovZS5jcmVhdGVFbGVtZW50KGcse2ZvcmNlZFRoZW1lOnQsZGlzYWJsZVRyYW5zaXRpb25PbkNoYW5nZTpuLGVuYWJsZVN5c3RlbTpsLGVuYWJsZUNvbG9yU2NoZW1lOm0sc3RvcmFnZUtleTpkLHRoZW1lczpoLGRlZmF1bHRUaGVtZTp5LGF0dHJpYnV0ZTokLHZhbHVlOmYsY2hpbGRyZW46dyxhdHRyczp4LG5vbmNlOlR9KSx3KX0sZz0vKiNfX1BVUkVfXyovbCgoe2ZvcmNlZFRoZW1lOnQsc3RvcmFnZUtleTpuLGF0dHJpYnV0ZTpyLGVuYWJsZVN5c3RlbTpvLGVuYWJsZUNvbG9yU2NoZW1lOmEsZGVmYXVsdFRoZW1lOnMsdmFsdWU6bCxhdHRyczptLG5vbmNlOmR9KT0+e2NvbnN0IHU9XCJzeXN0ZW1cIj09PXMsaD1cImNsYXNzXCI9PT1yP2B2YXIgZD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYz1kLmNsYXNzTGlzdDtjLnJlbW92ZSgke20ubWFwKGU9PmAnJHtlfSdgKS5qb2luKFwiLFwiKX0pO2A6YHZhciBkPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxuPScke3J9JyxzPSdzZXRBdHRyaWJ1dGUnO2AseT1hP2MuaW5jbHVkZXMocykmJnM/YGlmKGU9PT0nbGlnaHQnfHxlPT09J2RhcmsnfHwhZSlkLnN0eWxlLmNvbG9yU2NoZW1lPWV8fCcke3N9J2A6XCJpZihlPT09J2xpZ2h0J3x8ZT09PSdkYXJrJylkLnN0eWxlLmNvbG9yU2NoZW1lPWVcIjpcIlwiLCQ9KGUsdD0hMSxuPSEwKT0+e2NvbnN0IG89bD9sW2VdOmUscz10P2UrXCJ8fCAnJ1wiOmAnJHtvfSdgO2xldCBtPVwiXCI7cmV0dXJuIGEmJm4mJiF0JiZjLmluY2x1ZGVzKGUpJiYobSs9YGQuc3R5bGUuY29sb3JTY2hlbWUgPSAnJHtlfSc7YCksXCJjbGFzc1wiPT09cj9tKz10fHxvP2BjLmFkZCgke3N9KWA6XCJudWxsXCI6byYmKG0rPWBkW3NdKG4sJHtzfSlgKSxtfSx2PXQ/YCFmdW5jdGlvbigpeyR7aH0keyQodCl9fSgpYDpvP2AhZnVuY3Rpb24oKXt0cnl7JHtofXZhciBlPWxvY2FsU3RvcmFnZS5nZXRJdGVtKCcke259Jyk7aWYoJ3N5c3RlbSc9PT1lfHwoIWUmJiR7dX0pKXt2YXIgdD0nJHtpfScsbT13aW5kb3cubWF0Y2hNZWRpYSh0KTtpZihtLm1lZGlhIT09dHx8bS5tYXRjaGVzKXskeyQoXCJkYXJrXCIpfX1lbHNleyR7JChcImxpZ2h0XCIpfX19ZWxzZSBpZihlKXske2w/YHZhciB4PSR7SlNPTi5zdHJpbmdpZnkobCl9O2A6XCJcIn0keyQobD9cInhbZV1cIjpcImVcIiwhMCl9fSR7dT9cIlwiOlwiZWxzZXtcIiskKHMsITEsITEpK1wifVwifSR7eX19Y2F0Y2goZSl7fX0oKWA6YCFmdW5jdGlvbigpe3RyeXske2h9dmFyIGU9bG9jYWxTdG9yYWdlLmdldEl0ZW0oJyR7bn0nKTtpZihlKXske2w/YHZhciB4PSR7SlNPTi5zdHJpbmdpZnkobCl9O2A6XCJcIn0keyQobD9cInhbZV1cIjpcImVcIiwhMCl9fWVsc2V7JHskKHMsITEsITEpfTt9JHt5fX1jYXRjaCh0KXt9fSgpO2A7LyojX19QVVJFX18qL3JldHVybiBlLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIix7bm9uY2U6ZCxkYW5nZXJvdXNseVNldElubmVySFRNTDp7X19odG1sOnZ9fSl9LCgpPT4hMCksUz0oZSx0KT0+e2lmKGQpcmV0dXJuO2xldCBuO3RyeXtuPWxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpfHx2b2lkIDB9Y2F0Y2goZSl7fXJldHVybiBufHx0fSxiPSgpPT57Y29uc3QgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7cmV0dXJuIGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCIqey13ZWJraXQtdHJhbnNpdGlvbjpub25lIWltcG9ydGFudDstbW96LXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7LW8tdHJhbnNpdGlvbjpub25lIWltcG9ydGFudDstbXMtdHJhbnNpdGlvbjpub25lIWltcG9ydGFudDt0cmFuc2l0aW9uOm5vbmUhaW1wb3J0YW50fVwiKSksZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChlKSwoKT0+e3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpLHNldFRpbWVvdXQoKCk9Pntkb2N1bWVudC5oZWFkLnJlbW92ZUNoaWxkKGUpfSwxKX19LHA9ZT0+KGV8fChlPXdpbmRvdy5tYXRjaE1lZGlhKGkpKSxlLm1hdGNoZXM/XCJkYXJrXCI6XCJsaWdodFwiKTtleHBvcnR7JCBhcyBUaGVtZVByb3ZpZGVyLHkgYXMgdXNlVGhlbWV9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-themes/dist/index.module.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Capp%5Cglobals.css&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Clanguage-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Ctheme-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22app%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Capp%5Cglobals.css&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Clanguage-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Ctheme-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22app%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&server=false! ***!

/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/language-provider.tsx */ \"(app-pages-browser)/./components/language-provider.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/theme-provider.tsx */ \"(app-pages-browser)/./components/theme-provider.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\", 23))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz1HJTNBJTVDcHJvZ3JhbW1pbmclNUNkaWRpdG9waWElNUNmaXJzdCU1Q2FwcCU1Q2dsb2JhbHMuY3NzJm1vZHVsZXM9RyUzQSU1Q3Byb2dyYW1taW5nJTVDZGlkaXRvcGlhJTVDZmlyc3QlNUNjb21wb25lbnRzJTVDbGFuZ3VhZ2UtcHJvdmlkZXIudHN4Jm1vZHVsZXM9RyUzQSU1Q3Byb2dyYW1taW5nJTVDZGlkaXRvcGlhJTVDZmlyc3QlNUNjb21wb25lbnRzJTVDdGhlbWUtcHJvdmlkZXIudHN4Jm1vZHVsZXM9RyUzQSU1Q3Byb2dyYW1taW5nJTVDZGlkaXRvcGlhJTVDZmlyc3QlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZm9udCU1Q2dvb2dsZSU1Q3RhcmdldC5jc3MlM0YlN0IlMjJwYXRoJTIyJTNBJTIyYXBwJTVDJTVDbGF5b3V0LnRzeCUyMiUyQyUyMmltcG9ydCUyMiUzQSUyMkludGVyJTIyJTJDJTIyYXJndW1lbnRzJTIyJTNBJTVCJTdCJTIyc3Vic2V0cyUyMiUzQSU1QiUyMmxhdGluJTIyJTVEJTdEJTVEJTJDJTIydmFyaWFibGVOYW1lJTIyJTNBJTIyaW50ZXIlMjIlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSw0SkFBd0Y7QUFDeEYsOExBQXlHO0FBQ3pHLHdMQUFzRztBQUN0RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzBmM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJHOlxcXFxwcm9ncmFtbWluZ1xcXFxkaWRpdG9waWFcXFxcZmlyc3RcXFxcYXBwXFxcXGdsb2JhbHMuY3NzXCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJHOlxcXFxwcm9ncmFtbWluZ1xcXFxkaWRpdG9waWFcXFxcZmlyc3RcXFxcY29tcG9uZW50c1xcXFxsYW5ndWFnZS1wcm92aWRlci50c3hcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkc6XFxcXHByb2dyYW1taW5nXFxcXGRpZGl0b3BpYVxcXFxmaXJzdFxcXFxjb21wb25lbnRzXFxcXHRoZW1lLXByb3ZpZGVyLnRzeFwiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRzpcXFxccHJvZ3JhbW1pbmdcXFxcZGlkaXRvcGlhXFxcXGZpcnN0XFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGZvbnRcXFxcZ29vZ2xlXFxcXHRhcmdldC5jc3M/e1xcXCJwYXRoXFxcIjpcXFwiYXBwXFxcXFxcXFxsYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiSW50ZXJcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcInN1YnNldHNcXFwiOltcXFwibGF0aW5cXFwiXX1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJpbnRlclxcXCJ9XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Capp%5Cglobals.css&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Clanguage-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Ctheme-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22app%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"f356d38b694a\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzkxYTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJmMzU2ZDM4YjY5NGFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/language-provider.tsx":
/*!******************************************!*\
  !*** ./components/language-provider.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LanguageProvider: function() { return /* binding */ LanguageProvider; },\n/* harmony export */   useLanguage: function() { return /* binding */ useLanguage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/i18n */ \"(app-pages-browser)/./lib/i18n.ts\");\n/* __next_internal_client_entry_do_not_use__ LanguageProvider,useLanguage auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst LanguageContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction LanguageProvider(param) {\n    let { children } = param;\n    _s();\n    const [language, setLanguage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"en\");\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Load language from localStorage or default to 'en'\n        const savedLanguage = localStorage.getItem(\"language\");\n        if (savedLanguage && (savedLanguage === \"en\" || savedLanguage === \"ar\")) {\n            setLanguage(savedLanguage);\n        }\n    }, []);\n    const handleSetLanguage = (lang)=>{\n        setLanguage(lang);\n        localStorage.setItem(\"language\", lang);\n        // Update document direction and language\n        const direction = (0,_lib_i18n__WEBPACK_IMPORTED_MODULE_2__.getDirection)(lang);\n        document.documentElement.dir = direction;\n        document.documentElement.lang = lang;\n        // Update body direction as well\n        document.body.dir = direction;\n        document.body.lang = lang;\n    };\n    const t = (key)=>{\n        return (0,_lib_i18n__WEBPACK_IMPORTED_MODULE_2__.getTranslation)(language, key);\n    };\n    const direction = (0,_lib_i18n__WEBPACK_IMPORTED_MODULE_2__.getDirection)(language);\n    // Set initial document attributes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const direction = (0,_lib_i18n__WEBPACK_IMPORTED_MODULE_2__.getDirection)(language);\n        document.documentElement.dir = direction;\n        document.documentElement.lang = language;\n        document.body.dir = direction;\n        document.body.lang = language;\n    }, [\n        language\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LanguageContext.Provider, {\n        value: {\n            language,\n            setLanguage: handleSetLanguage,\n            t,\n            direction\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"G:\\\\programming\\\\diditopia\\\\first\\\\components\\\\language-provider.tsx\",\n        lineNumber: 56,\n        columnNumber: 5\n    }, this);\n}\n_s(LanguageProvider, \"FDMZd/ohxtnBeISRSFNa9TOcIxw=\");\n_c = LanguageProvider;\nfunction useLanguage() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LanguageContext);\n    if (context === undefined) {\n        throw new Error(\"useLanguage must be used within a LanguageProvider\");\n    }\n    return context;\n}\n_s1(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvbGFuZ3VhZ2UtcHJvdmlkZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRTZFO0FBQ1Y7QUFTbkUsTUFBTU8sZ0NBQWtCTixvREFBYUEsQ0FBa0NPO0FBRWhFLFNBQVNDLGlCQUFpQixLQUEyQztRQUEzQyxFQUFFQyxRQUFRLEVBQWlDLEdBQTNDOztJQUMvQixNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR1QsK0NBQVFBLENBQVc7SUFFbkRDLGdEQUFTQSxDQUFDO1FBQ1IscURBQXFEO1FBQ3JELE1BQU1TLGdCQUFnQkMsYUFBYUMsT0FBTyxDQUFDO1FBQzNDLElBQUlGLGlCQUFrQkEsQ0FBQUEsa0JBQWtCLFFBQVFBLGtCQUFrQixJQUFHLEdBQUk7WUFDdkVELFlBQVlDO1FBQ2Q7SUFDRixHQUFHLEVBQUU7SUFFTCxNQUFNRyxvQkFBb0IsQ0FBQ0M7UUFDekJMLFlBQVlLO1FBQ1pILGFBQWFJLE9BQU8sQ0FBQyxZQUFZRDtRQUVqQyx5Q0FBeUM7UUFDekMsTUFBTUUsWUFBWWIsdURBQVlBLENBQUNXO1FBQy9CRyxTQUFTQyxlQUFlLENBQUNDLEdBQUcsR0FBR0g7UUFDL0JDLFNBQVNDLGVBQWUsQ0FBQ0osSUFBSSxHQUFHQTtRQUVoQyxnQ0FBZ0M7UUFDaENHLFNBQVNHLElBQUksQ0FBQ0QsR0FBRyxHQUFHSDtRQUNwQkMsU0FBU0csSUFBSSxDQUFDTixJQUFJLEdBQUdBO0lBQ3ZCO0lBRUEsTUFBTU8sSUFBSSxDQUFDQztRQUNULE9BQU9wQix5REFBY0EsQ0FBQ00sVUFBVWM7SUFDbEM7SUFFQSxNQUFNTixZQUFZYix1REFBWUEsQ0FBQ0s7SUFFL0Isa0NBQWtDO0lBQ2xDUCxnREFBU0EsQ0FBQztRQUNSLE1BQU1lLFlBQVliLHVEQUFZQSxDQUFDSztRQUMvQlMsU0FBU0MsZUFBZSxDQUFDQyxHQUFHLEdBQUdIO1FBQy9CQyxTQUFTQyxlQUFlLENBQUNKLElBQUksR0FBR047UUFDaENTLFNBQVNHLElBQUksQ0FBQ0QsR0FBRyxHQUFHSDtRQUNwQkMsU0FBU0csSUFBSSxDQUFDTixJQUFJLEdBQUdOO0lBQ3ZCLEdBQUc7UUFBQ0E7S0FBUztJQUViLHFCQUNFLDhEQUFDSixnQkFBZ0JtQixRQUFRO1FBQUNDLE9BQU87WUFBRWhCO1lBQVVDLGFBQWFJO1lBQW1CUTtZQUFHTDtRQUFVO2tCQUN2RlQ7Ozs7OztBQUdQO0dBN0NnQkQ7S0FBQUE7QUErQ1QsU0FBU21COztJQUNkLE1BQU1DLFVBQVUzQixpREFBVUEsQ0FBQ0s7SUFDM0IsSUFBSXNCLFlBQVlyQixXQUFXO1FBQ3pCLE1BQU0sSUFBSXNCLE1BQU07SUFDbEI7SUFDQSxPQUFPRDtBQUNUO0lBTmdCRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL2xhbmd1YWdlLXByb3ZpZGVyLnRzeD84ZDNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBMYW5ndWFnZSwgZ2V0VHJhbnNsYXRpb24sIGdldERpcmVjdGlvbiB9IGZyb20gJ0AvbGliL2kxOG4nXHJcblxyXG5pbnRlcmZhY2UgTGFuZ3VhZ2VDb250ZXh0VHlwZSB7XHJcbiAgbGFuZ3VhZ2U6IExhbmd1YWdlXHJcbiAgc2V0TGFuZ3VhZ2U6IChsYW5nOiBMYW5ndWFnZSkgPT4gdm9pZFxyXG4gIHQ6IChrZXk6IHN0cmluZykgPT4gc3RyaW5nXHJcbiAgZGlyZWN0aW9uOiAnbHRyJyB8ICdydGwnXHJcbn1cclxuXHJcbmNvbnN0IExhbmd1YWdlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8TGFuZ3VhZ2VDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIExhbmd1YWdlUHJvdmlkZXIoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfSkge1xyXG4gIGNvbnN0IFtsYW5ndWFnZSwgc2V0TGFuZ3VhZ2VdID0gdXNlU3RhdGU8TGFuZ3VhZ2U+KCdlbicpXHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAvLyBMb2FkIGxhbmd1YWdlIGZyb20gbG9jYWxTdG9yYWdlIG9yIGRlZmF1bHQgdG8gJ2VuJ1xyXG4gICAgY29uc3Qgc2F2ZWRMYW5ndWFnZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5ndWFnZScpIGFzIExhbmd1YWdlXHJcbiAgICBpZiAoc2F2ZWRMYW5ndWFnZSAmJiAoc2F2ZWRMYW5ndWFnZSA9PT0gJ2VuJyB8fCBzYXZlZExhbmd1YWdlID09PSAnYXInKSkge1xyXG4gICAgICBzZXRMYW5ndWFnZShzYXZlZExhbmd1YWdlKVxyXG4gICAgfVxyXG4gIH0sIFtdKVxyXG5cclxuICBjb25zdCBoYW5kbGVTZXRMYW5ndWFnZSA9IChsYW5nOiBMYW5ndWFnZSkgPT4ge1xyXG4gICAgc2V0TGFuZ3VhZ2UobGFuZylcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsYW5ndWFnZScsIGxhbmcpXHJcblxyXG4gICAgLy8gVXBkYXRlIGRvY3VtZW50IGRpcmVjdGlvbiBhbmQgbGFuZ3VhZ2VcclxuICAgIGNvbnN0IGRpcmVjdGlvbiA9IGdldERpcmVjdGlvbihsYW5nKVxyXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRpciA9IGRpcmVjdGlvblxyXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmxhbmcgPSBsYW5nXHJcblxyXG4gICAgLy8gVXBkYXRlIGJvZHkgZGlyZWN0aW9uIGFzIHdlbGxcclxuICAgIGRvY3VtZW50LmJvZHkuZGlyID0gZGlyZWN0aW9uXHJcbiAgICBkb2N1bWVudC5ib2R5LmxhbmcgPSBsYW5nXHJcbiAgfVxyXG5cclxuICBjb25zdCB0ID0gKGtleTogc3RyaW5nKSA9PiB7XHJcbiAgICByZXR1cm4gZ2V0VHJhbnNsYXRpb24obGFuZ3VhZ2UsIGtleSBhcyBhbnkpXHJcbiAgfVxyXG5cclxuICBjb25zdCBkaXJlY3Rpb24gPSBnZXREaXJlY3Rpb24obGFuZ3VhZ2UpXHJcblxyXG4gIC8vIFNldCBpbml0aWFsIGRvY3VtZW50IGF0dHJpYnV0ZXNcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgZGlyZWN0aW9uID0gZ2V0RGlyZWN0aW9uKGxhbmd1YWdlKVxyXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRpciA9IGRpcmVjdGlvblxyXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmxhbmcgPSBsYW5ndWFnZVxyXG4gICAgZG9jdW1lbnQuYm9keS5kaXIgPSBkaXJlY3Rpb25cclxuICAgIGRvY3VtZW50LmJvZHkubGFuZyA9IGxhbmd1YWdlXHJcbiAgfSwgW2xhbmd1YWdlXSlcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxMYW5ndWFnZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgbGFuZ3VhZ2UsIHNldExhbmd1YWdlOiBoYW5kbGVTZXRMYW5ndWFnZSwgdCwgZGlyZWN0aW9uIH19PlxyXG4gICAgICB7Y2hpbGRyZW59XHJcbiAgICA8L0xhbmd1YWdlQ29udGV4dC5Qcm92aWRlcj5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VMYW5ndWFnZSgpIHtcclxuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChMYW5ndWFnZUNvbnRleHQpXHJcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VMYW5ndWFnZSBtdXN0IGJlIHVzZWQgd2l0aGluIGEgTGFuZ3VhZ2VQcm92aWRlcicpXHJcbiAgfVxyXG4gIHJldHVybiBjb250ZXh0XHJcbn0gIl0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsImdldFRyYW5zbGF0aW9uIiwiZ2V0RGlyZWN0aW9uIiwiTGFuZ3VhZ2VDb250ZXh0IiwidW5kZWZpbmVkIiwiTGFuZ3VhZ2VQcm92aWRlciIsImNoaWxkcmVuIiwibGFuZ3VhZ2UiLCJzZXRMYW5ndWFnZSIsInNhdmVkTGFuZ3VhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiaGFuZGxlU2V0TGFuZ3VhZ2UiLCJsYW5nIiwic2V0SXRlbSIsImRpcmVjdGlvbiIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiZGlyIiwiYm9keSIsInQiLCJrZXkiLCJQcm92aWRlciIsInZhbHVlIiwidXNlTGFuZ3VhZ2UiLCJjb250ZXh0IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/language-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/theme-provider.tsx":
/*!***************************************!*\
  !*** ./components/theme-provider.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: function() { return /* binding */ ThemeProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"(app-pages-browser)/./node_modules/next-themes/dist/index.module.js\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider auto */ \n\n\nfunction ThemeProvider(param) {\n    let { children, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n        ...props,\n        children: children\n    }, void 0, false, {\n        fileName: \"G:\\\\programming\\\\diditopia\\\\first\\\\components\\\\theme-provider.tsx\",\n        lineNumber: 8,\n        columnNumber: 10\n    }, this);\n}\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdGhlbWUtcHJvdmlkZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUU4QjtBQUNtQztBQUcxRCxTQUFTQyxjQUFjLEtBQTBDO1FBQTFDLEVBQUVFLFFBQVEsRUFBRSxHQUFHQyxPQUEyQixHQUExQztJQUM1QixxQkFBTyw4REFBQ0Ysc0RBQWtCQTtRQUFFLEdBQUdFLEtBQUs7a0JBQUdEOzs7Ozs7QUFDekM7S0FGZ0JGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvdGhlbWUtcHJvdmlkZXIudHN4PzkyODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgYXMgTmV4dFRoZW1lc1Byb3ZpZGVyIH0gZnJvbSBcIm5leHQtdGhlbWVzXCJcclxuaW1wb3J0IHsgdHlwZSBUaGVtZVByb3ZpZGVyUHJvcHMgfSBmcm9tIFwibmV4dC10aGVtZXMvZGlzdC90eXBlc1wiXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gVGhlbWVQcm92aWRlcih7IGNoaWxkcmVuLCAuLi5wcm9wcyB9OiBUaGVtZVByb3ZpZGVyUHJvcHMpIHtcclxuICByZXR1cm4gPE5leHRUaGVtZXNQcm92aWRlciB7Li4ucHJvcHN9PntjaGlsZHJlbn08L05leHRUaGVtZXNQcm92aWRlcj5cclxufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJUaGVtZVByb3ZpZGVyIiwiTmV4dFRoZW1lc1Byb3ZpZGVyIiwiY2hpbGRyZW4iLCJwcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/theme-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/i18n.ts":
/*!*********************!*\
  !*** ./lib/i18n.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirection: function() { return /* binding */ getDirection; },\n/* harmony export */   getTranslation: function() { return /* binding */ getTranslation; }\n/* harmony export */ });\nconst translations = {\n    en: {\n        // Navigation\n        dashboard: \"Dashboard\",\n        heartRate: \"Heart Rate\",\n        sleep: \"Sleep\",\n        temperature: \"Temperature\",\n        activity: \"Activity\",\n        notifications: \"Notifications\",\n        recommendations: \"Recommendations\",\n        settings: \"Settings\",\n        // Common\n        loading: \"Loading...\",\n        save: \"Save\",\n        cancel: \"Cancel\",\n        delete: \"Delete\",\n        edit: \"Edit\",\n        view: \"View\",\n        close: \"Close\",\n        back: \"Back\",\n        next: \"Next\",\n        previous: \"Previous\",\n        search: \"Search\",\n        filter: \"Filter\",\n        sort: \"Sort\",\n        all: \"All\",\n        none: \"None\",\n        yes: \"Yes\",\n        no: \"No\",\n        ok: \"OK\",\n        error: \"Error\",\n        success: \"Success\",\n        warning: \"Warning\",\n        info: \"Info\",\n        // Dashboard\n        healthTracker: \"Health Tracker\",\n        overview: \"Overview\",\n        currentTime: \"Current Time\",\n        live: \"Live\",\n        static: \"Static\",\n        goal: \"Goal\",\n        progress: \"Progress\",\n        complete: \"Complete\",\n        achieved: \"Achieved\",\n        almostThere: \"Almost There\",\n        goodProgress: \"Good Progress\",\n        keepMoving: \"Keep Moving\",\n        // Heart Rate\n        heartRateMonitoring: \"Heart Rate Monitoring\",\n        trackYourHeartRate: \"Track your heart rate and detect patterns\",\n        currentHeartRate: \"Current Heart Rate\",\n        bpm: \"BPM\",\n        restingRate: \"Resting Rate\",\n        averageToday: \"Today's Average\",\n        high: \"High\",\n        normal: \"Normal\",\n        low: \"Low\",\n        elevated: \"Elevated\",\n        heartRateZones: \"Heart Rate Zones\",\n        zone1: \"Zone 1 (Resting)\",\n        zone2: \"Zone 2 (Fat Burn)\",\n        zone3: \"Zone 3 (Cardio)\",\n        zone4: \"Zone 4 (Peak)\",\n        zone5: \"Zone 5 (Maximum)\",\n        dailyInsights: \"Daily Insights\",\n        // Sleep\n        sleepMonitoring: \"Sleep Monitoring\",\n        trackYourSleepPatterns: \"Track your sleep patterns and quality\",\n        lastNight: \"Last Night\",\n        sleepQuality: \"Sleep Quality\",\n        bedtime: \"Bedtime\",\n        wakeTime: \"Wake Time\",\n        deepSleep: \"Deep Sleep\",\n        lightSleep: \"Light Sleep\",\n        remSleep: \"REM Sleep\",\n        excellent: \"Excellent\",\n        good: \"Good\",\n        fair: \"Fair\",\n        poor: \"Poor\",\n        consistentBedtime: \"Consistent bedtime\",\n        naturalWakeCycle: \"Natural wake cycle\",\n        sleepQualityOverTime: \"Sleep Quality Over Time\",\n        weeklySleepOverview: \"Weekly Sleep Overview\",\n        sleepInsights: \"Sleep Insights\",\n        consistentSleepSchedule: \"Consistent Sleep Schedule\",\n        maintainedConsistentBedtime: \"You've maintained a consistent bedtime for the past 5 days\",\n        goodDeepSleep: \"Good Deep Sleep\",\n        deepSleepAboveRecommended: \"Your deep sleep duration is above the recommended 2 hours\",\n        roomForImprovement: \"Room for Improvement\",\n        reduceScreenTime: \"Consider reducing screen time 1 hour before bedtime\",\n        sleepRecommendations: \"Sleep Recommendations\",\n        optimizeEnvironment: \"Optimize Your Environment\",\n        keepBedroomCool: \"Keep your bedroom cool (65-67\\xb0F) and dark for better sleep quality\",\n        establishRoutine: \"Establish a Routine\",\n        sameTimeEveryDay: \"Try to go to bed and wake up at the same time every day\",\n        limitScreenTime: \"Limit Screen Time\",\n        avoidScreensBeforeBed: \"Avoid screens 1 hour before bedtime to improve sleep onset\",\n        // Temperature\n        temperatureMonitoring: \"Temperature Monitoring\",\n        trackBodyTemperature: \"Track your body temperature and detect fever patterns\",\n        currentTemperature: \"Current Temperature\",\n        todayAverage: \"Today's Average\",\n        todayLow: \"Today's Low\",\n        todayHigh: \"Today's High\",\n        withinNormalRange: \"Within normal range\",\n        attentionNeeded: \"Attention needed\",\n        hypothermia: \"Hypothermia\",\n        fever: \"Fever\",\n        highFever: \"High Fever\",\n        temperatureZones: \"Temperature Zones\",\n        normalDailyPattern: \"Normal Daily Pattern\",\n        healthyCircadianRhythm: \"Your temperature follows a healthy circadian rhythm\",\n        eveningPeak: \"Evening Peak\",\n        peaksLateAfternoon: \"Temperature typically peaks in the late afternoon\",\n        mildElevation: \"Mild Elevation\",\n        slightElevationDetected: \"Slight elevation detected - monitor for symptoms\",\n        feverDetection: \"Fever Detection & Alerts\",\n        noFeverDetected: \"No Fever Detected\",\n        temperatureWithinRange: \"Your temperature is within normal range\",\n        monitorSymptoms: \"Monitor Symptoms\",\n        watchForSymptoms: \"Watch for fatigue, body aches, or other symptoms\",\n        seekMedicalAttention: \"Seek Medical Attention\",\n        ifFeverPersists: \"If fever persists or exceeds 39\\xb0C\",\n        // Activity\n        activityMonitoring: \"Activity Monitoring\",\n        trackDailySteps: \"Track your daily steps, calories, and physical activity\",\n        todaySteps: \"Today's Steps\",\n        caloriesBurned: \"Calories Burned\",\n        fromStepsToday: \"From steps today\",\n        distance: \"Distance\",\n        totalDistanceWalked: \"Total distance walked\",\n        activeTime: \"Active Time\",\n        todayActivity: \"Today's activity\",\n        activityProgress: \"Today's Activity Progress\",\n        weeklyActivityOverview: \"Weekly Activity Overview\",\n        activityBreakdown: \"Activity Breakdown\",\n        weeklyGoals: \"Weekly Goals\",\n        goalAchieved: \"Goal achieved!\",\n        activityInsights: \"Activity Insights\",\n        consistentActivity: \"Consistent Activity\",\n        metDailyGoal: \"You've met your daily goal 5 out of 7 days this week\",\n        peakActivityTime: \"Peak Activity Time\",\n        mostActiveHours: \"Your most active hours are between 2-6 PM\",\n        weekendBoost: \"Weekend Boost\",\n        moreActiveWeekends: \"You're 25% more active on weekends\",\n        activityRecommendations: \"Activity Recommendations\",\n        increaseIntensity: \"Increase Intensity\",\n        addBriskWalking: \"Try adding 10 minutes of brisk walking to boost your daily activity\",\n        setHigherGoals: \"Set Higher Goals\",\n        increaseStepGoal: \"Consider increasing your daily step goal to 12,000 steps\",\n        varietyIsKey: \"Variety is Key\",\n        mixActivities: \"Mix walking with cycling or swimming for better fitness\",\n        recentAchievements: \"Recent Achievements\",\n        dayStreak: \"7-Day Streak\",\n        consecutiveDays: \"Met daily goal for 7 consecutive days\",\n        distanceMaster: \"Distance Master\",\n        walkedDistance: \"Walked 50+ km this month\",\n        calorieBurner: \"Calorie Burner\",\n        burnedCalories: \"Burned 5,000+ calories this week\",\n        // Notifications\n        unreadNotifications: \"unread notification\",\n        markAllAsRead: \"Mark all as read\",\n        markAsRead: \"Mark read\",\n        deleteNotification: \"Delete\",\n        noNotifications: \"No notifications\",\n        allCaughtUp: \"You're all caught up! Check back later for new updates.\",\n        notificationSettings: \"Notification Settings\",\n        heartRateAlerts: \"Heart Rate Alerts\",\n        heartRateOutsideRange: \"Get notified when your heart rate is outside normal range\",\n        sleepQualityAlerts: \"Sleep Quality Alerts\",\n        sleepPatternNotifications: \"Receive notifications about your sleep patterns\",\n        activityAchievements: \"Activity Achievements\",\n        celebrateFitnessGoals: \"Celebrate when you reach your fitness goals\",\n        // Recommendations\n        healthRecommendations: \"Health Recommendations\",\n        aiPoweredSuggestions: \"AI-powered suggestions to improve your health and wellness\",\n        totalRecommendations: \"Total Recommendations\",\n        highPriority: \"High Priority\",\n        mediumPriority: \"Medium Priority\",\n        lowPriority: \"Low Priority\",\n        priority: \"Priority\",\n        category: \"Category\",\n        markAsDone: \"Mark as done\",\n        dismiss: \"Dismiss\",\n        noRecommendations: \"No recommendations found\",\n        adjustFilters: \"Try adjusting your filters or check back later for new suggestions.\",\n        actionPlan: \"Your Action Plan\",\n        inProgress: \"In progress\",\n        notStarted: \"Not started\",\n        completed: \"Completed\",\n        // Settings\n        manageAccountPreferences: \"Manage your account preferences and notification settings\",\n        profileSettings: \"Profile Settings\",\n        fullName: \"Full Name\",\n        enterFullName: \"Enter your full name\",\n        emailAddress: \"Email Address\",\n        enterEmail: \"Enter your email\",\n        currentPassword: \"Current Password\",\n        enterCurrentPassword: \"Enter current password\",\n        newPassword: \"New Password\",\n        enterNewPassword: \"Enter new password\",\n        confirmNewPassword: \"Confirm New Password\",\n        confirmPassword: \"Confirm new password\",\n        saveChanges: \"Save Changes\",\n        appearance: \"Appearance\",\n        theme: \"Theme\",\n        light: \"Light\",\n        dark: \"Dark\",\n        system: \"System\",\n        colorScheme: \"Color Scheme\",\n        blue: \"Blue\",\n        green: \"Green\",\n        purple: \"Purple\",\n        orange: \"Orange\",\n        privacySecurity: \"Privacy & Security\",\n        twoFactorAuthentication: \"Two-Factor Authentication\",\n        extraLayerSecurity: \"Add an extra layer of security to your account\",\n        dataExport: \"Data Export\",\n        downloadHealthData: \"Download your health data in various formats\",\n        exportData: \"Export Data\",\n        deleteAccount: \"Delete Account\",\n        permanentlyDeleteAccount: \"Permanently delete your account and all data\",\n        // Auth\n        login: \"Login\",\n        register: \"Register\",\n        signOut: \"Sign out\",\n        email: \"Email\",\n        password: \"Password\",\n        forgotPassword: \"Forgot Password?\",\n        rememberMe: \"Remember me\",\n        dontHaveAccount: \"Don't have an account?\",\n        alreadyHaveAccount: \"Already have an account?\",\n        createAccount: \"Create Account\",\n        signIn: \"Sign In\",\n        welcomeBack: \"Welcome back\",\n        signInToAccount: \"Sign in to your account\",\n        createNewAccount: \"Create a new account\",\n        joinHealthTracker: \"Join Health Tracker\",\n        name: \"Name\",\n        enterName: \"Enter your name\",\n        passwordsMustMatch: \"Passwords must match\",\n        invalidEmail: \"Invalid email address\",\n        passwordTooShort: \"Password must be at least 6 characters\",\n        accountCreated: \"Account created successfully\",\n        loginSuccessful: \"Login successful\",\n        logoutSuccessful: \"Logout successful\",\n        // Landing Page\n        welcomeToHealthTracker: \"Welcome to Health Tracker\",\n        comprehensiveHealthDashboard: \"A comprehensive health tracking dashboard with real-time monitoring\",\n        realTimeMonitoring: \"Real-time monitoring\",\n        smartRecommendations: \"Smart recommendations\",\n        mobileResponsive: \"Mobile responsive\",\n        getStarted: \"Get Started\",\n        learnMore: \"Learn More\",\n        features: \"Features\",\n        sleepTracking: \"Sleep Tracking\",\n        activityTracking: \"Activity Tracking\",\n        darkMode: \"Dark Mode\",\n        mobileFriendly: \"Mobile Friendly\"\n    },\n    ar: {\n        // Navigation\n        dashboard: \"لوحة التحكم\",\n        heartRate: \"معدل ضربات القلب\",\n        sleep: \"النوم\",\n        temperature: \"درجة الحرارة\",\n        activity: \"النشاط\",\n        notifications: \"الإشعارات\",\n        recommendations: \"التوصيات\",\n        settings: \"الإعدادات\",\n        // Common\n        loading: \"جاري التحميل...\",\n        save: \"حفظ\",\n        cancel: \"إلغاء\",\n        delete: \"حذف\",\n        edit: \"تعديل\",\n        view: \"عرض\",\n        close: \"إغلاق\",\n        back: \"رجوع\",\n        next: \"التالي\",\n        previous: \"السابق\",\n        search: \"بحث\",\n        filter: \"تصفية\",\n        sort: \"ترتيب\",\n        all: \"الكل\",\n        none: \"لا شيء\",\n        yes: \"نعم\",\n        no: \"لا\",\n        ok: \"موافق\",\n        error: \"خطأ\",\n        success: \"نجح\",\n        warning: \"تحذير\",\n        info: \"معلومات\",\n        // Dashboard\n        healthTracker: \"متتبع الصحة\",\n        overview: \"نظرة عامة\",\n        currentTime: \"الوقت الحالي\",\n        live: \"مباشر\",\n        static: \"ثابت\",\n        goal: \"الهدف\",\n        progress: \"التقدم\",\n        complete: \"مكتمل\",\n        achieved: \"محقق\",\n        almostThere: \"تقريباً هناك\",\n        goodProgress: \"تقدم جيد\",\n        keepMoving: \"استمر في التحرك\",\n        // Heart Rate\n        heartRateMonitoring: \"مراقبة معدل ضربات القلب\",\n        trackYourHeartRate: \"تتبع معدل ضربات قلبك واكتشف الأنماط\",\n        currentHeartRate: \"معدل ضربات القلب الحالي\",\n        bpm: \"ضربة/دقيقة\",\n        restingRate: \"معدل الراحة\",\n        averageToday: \"المتوسط اليوم\",\n        high: \"عالي\",\n        normal: \"طبيعي\",\n        low: \"منخفض\",\n        elevated: \"مرتفع\",\n        heartRateZones: \"مناطق معدل ضربات القلب\",\n        zone1: \"المنطقة 1 (الراحة)\",\n        zone2: \"المنطقة 2 (حرق الدهون)\",\n        zone3: \"المنطقة 3 (القلب والأوعية)\",\n        zone4: \"المنطقة 4 (الذروة)\",\n        zone5: \"المنطقة 5 (الحد الأقصى)\",\n        dailyInsights: \"رؤى يومية\",\n        // Sleep\n        sleepMonitoring: \"مراقبة النوم\",\n        trackYourSleepPatterns: \"تتبع أنماط نومك وجودته\",\n        lastNight: \"الليلة الماضية\",\n        sleepQuality: \"جودة النوم\",\n        bedtime: \"وقت النوم\",\n        wakeTime: \"وقت الاستيقاظ\",\n        deepSleep: \"النوم العميق\",\n        lightSleep: \"النوم الخفيف\",\n        remSleep: \"نوم حركة العين السريعة\",\n        excellent: \"ممتاز\",\n        good: \"جيد\",\n        fair: \"مقبول\",\n        poor: \"ضعيف\",\n        consistentBedtime: \"وقت نوم ثابت\",\n        naturalWakeCycle: \"دورة استيقاظ طبيعية\",\n        sleepQualityOverTime: \"جودة النوم مع الوقت\",\n        weeklySleepOverview: \"نظرة عامة على النوم الأسبوعي\",\n        sleepInsights: \"رؤى النوم\",\n        consistentSleepSchedule: \"جدول نوم ثابت\",\n        maintainedConsistentBedtime: \"لقد حافظت على وقت نوم ثابت لمدة 5 أيام\",\n        goodDeepSleep: \"نوم عميق جيد\",\n        deepSleepAboveRecommended: \"مدة نومك العميق أعلى من الساعتين الموصى بهما\",\n        roomForImprovement: \"مجال للتحسين\",\n        reduceScreenTime: \"فكر في تقليل وقت الشاشة قبل النوم بساعة\",\n        sleepRecommendations: \"توصيات النوم\",\n        optimizeEnvironment: \"تحسين البيئة\",\n        keepBedroomCool: \"حافظ على غرفة النوم باردة (18-19\\xb0م) ومظلمة لجودة نوم أفضل\",\n        establishRoutine: \"إنشاء روتين\",\n        sameTimeEveryDay: \"حاول الذهاب للنوم والاستيقاظ في نفس الوقت كل يوم\",\n        limitScreenTime: \"تقييد وقت الشاشة\",\n        avoidScreensBeforeBed: \"تجنب الشاشات قبل النوم بساعة لتحسين بداية النوم\",\n        // Temperature\n        temperatureMonitoring: \"مراقبة درجة الحرارة\",\n        trackBodyTemperature: \"تتبع درجة حرارة جسمك واكتشف أنماط الحمى\",\n        currentTemperature: \"درجة الحرارة الحالية\",\n        todayAverage: \"متوسط اليوم\",\n        todayLow: \"أدنى اليوم\",\n        todayHigh: \"أعلى اليوم\",\n        withinNormalRange: \"ضمن النطاق الطبيعي\",\n        attentionNeeded: \"تحتاج انتباه\",\n        hypothermia: \"انخفاض حرارة الجسم\",\n        fever: \"حمى\",\n        highFever: \"حمى عالية\",\n        temperatureZones: \"مناطق درجة الحرارة\",\n        normalDailyPattern: \"نمط يومي طبيعي\",\n        healthyCircadianRhythm: \"درجة حرارتك تتبع إيقاع يومي صحي\",\n        eveningPeak: \"ذروة المساء\",\n        peaksLateAfternoon: \"درجة الحرارة تبلغ ذروتها في وقت متأخر من الظهر\",\n        mildElevation: \"ارتفاع خفيف\",\n        slightElevationDetected: \"تم اكتشاف ارتفاع خفيف - راقب الأعراض\",\n        feverDetection: \"اكتشاف الحمى والتنبيهات\",\n        noFeverDetected: \"لم يتم اكتشاف حمى\",\n        temperatureWithinRange: \"درجة حرارتك ضمن النطاق الطبيعي\",\n        monitorSymptoms: \"راقب الأعراض\",\n        watchForSymptoms: \"راقب التعب وآلام الجسم أو أعراض أخرى\",\n        seekMedicalAttention: \"اطلب العناية الطبية\",\n        ifFeverPersists: \"إذا استمرت الحمى أو تجاوزت 39\\xb0م\",\n        // Activity\n        activityMonitoring: \"مراقبة النشاط\",\n        trackDailySteps: \"تتبع خطواتك اليومية والسعرات الحرارية والنشاط البدني\",\n        todaySteps: \"خطوات اليوم\",\n        caloriesBurned: \"السعرات المحروقة\",\n        fromStepsToday: \"من خطوات اليوم\",\n        distance: \"المسافة\",\n        totalDistanceWalked: \"إجمالي المسافة المقطوعة\",\n        activeTime: \"وقت النشاط\",\n        todayActivity: \"نشاط اليوم\",\n        activityProgress: \"تقدم النشاط اليوم\",\n        weeklyActivityOverview: \"نظرة عامة على النشاط الأسبوعي\",\n        activityBreakdown: \"تفصيل النشاط\",\n        weeklyGoals: \"الأهداف الأسبوعية\",\n        goalAchieved: \"تم تحقيق الهدف!\",\n        activityInsights: \"رؤى النشاط\",\n        consistentActivity: \"نشاط ثابت\",\n        metDailyGoal: \"لقد حققت هدفك اليومي 5 من أصل 7 أيام هذا الأسبوع\",\n        peakActivityTime: \"وقت النشاط الذروة\",\n        mostActiveHours: \"أكثر ساعات نشاطك بين 2-6 مساءً\",\n        weekendBoost: \"تعزيز عطلة نهاية الأسبوع\",\n        moreActiveWeekends: \"أنت أكثر نشاطاً بنسبة 25% في عطلات نهاية الأسبوع\",\n        activityRecommendations: \"توصيات النشاط\",\n        increaseIntensity: \"زيادة الكثافة\",\n        addBriskWalking: \"جرب إضافة 10 دقائق من المشي السريع لتعزيز نشاطك اليومي\",\n        setHigherGoals: \"ضع أهدافاً أعلى\",\n        increaseStepGoal: \"فكر في زيادة هدف خطواتك اليومي إلى 12,000 خطوة\",\n        varietyIsKey: \"التنوع هو المفتاح\",\n        mixActivities: \"امزج المشي مع ركوب الدراجات أو السباحة للياقة أفضل\",\n        recentAchievements: \"الإنجازات الأخيرة\",\n        dayStreak: \"سلسلة 7 أيام\",\n        consecutiveDays: \"حققت الهدف اليومي لمدة 7 أيام متتالية\",\n        distanceMaster: \"سيد المسافة\",\n        walkedDistance: \"مشيت أكثر من 50 كم هذا الشهر\",\n        calorieBurner: \"محترق السعرات\",\n        burnedCalories: \"أحرقت أكثر من 5,000 سعرة حرارية هذا الأسبوع\",\n        // Notifications\n        unreadNotifications: \"إشعارات غير مقروءة\",\n        markAllAsRead: \"تحديد الكل كمقروء\",\n        markAsRead: \"تحديد كمقروء\",\n        deleteNotification: \"حذف\",\n        noNotifications: \"لا توجد إشعارات\",\n        allCaughtUp: \"أنت محدث بالكامل! تحقق لاحقاً للحصول على تحديثات جديدة.\",\n        notificationSettings: \"إعدادات الإشعارات\",\n        heartRateAlerts: \"تنبيهات معدل ضربات القلب\",\n        heartRateOutsideRange: \"احصل على إشعارات عندما يكون معدل ضربات قلبك خارج النطاق الطبيعي\",\n        sleepQualityAlerts: \"تنبيهات جودة النوم\",\n        sleepPatternNotifications: \"استقبل إشعارات حول أنماط نومك\",\n        activityAchievements: \"إنجازات النشاط\",\n        celebrateFitnessGoals: \"احتفل عندما تحقق أهداف لياقتك\",\n        // Recommendations\n        healthRecommendations: \"توصيات الصحة\",\n        aiPoweredSuggestions: \"اقتراحات مدعومة بالذكاء الاصطناعي لتحسين صحتك ورفاهيتك\",\n        totalRecommendations: \"إجمالي التوصيات\",\n        highPriority: \"أولوية عالية\",\n        mediumPriority: \"أولوية متوسطة\",\n        lowPriority: \"أولوية منخفضة\",\n        priority: \"الأولوية\",\n        category: \"الفئة\",\n        markAsDone: \"تحديد كمكتمل\",\n        dismiss: \"رفض\",\n        noRecommendations: \"لم يتم العثور على توصيات\",\n        adjustFilters: \"جرب تعديل المرشحات أو تحقق لاحقاً للحصول على اقتراحات جديدة.\",\n        actionPlan: \"خطة عملك\",\n        inProgress: \"قيد التنفيذ\",\n        notStarted: \"لم يبدأ\",\n        completed: \"مكتمل\",\n        // Settings\n        manageAccountPreferences: \"إدارة تفضيلات حسابك وإعدادات الإشعارات\",\n        profileSettings: \"إعدادات الملف الشخصي\",\n        fullName: \"الاسم الكامل\",\n        enterFullName: \"أدخل اسمك الكامل\",\n        emailAddress: \"عنوان البريد الإلكتروني\",\n        enterEmail: \"أدخل بريدك الإلكتروني\",\n        currentPassword: \"كلمة المرور الحالية\",\n        enterCurrentPassword: \"أدخل كلمة المرور الحالية\",\n        newPassword: \"كلمة المرور الجديدة\",\n        enterNewPassword: \"أدخل كلمة المرور الجديدة\",\n        confirmNewPassword: \"تأكيد كلمة المرور الجديدة\",\n        confirmPassword: \"تأكيد كلمة المرور الجديدة\",\n        saveChanges: \"حفظ التغييرات\",\n        appearance: \"المظهر\",\n        theme: \"المظهر\",\n        light: \"فاتح\",\n        dark: \"داكن\",\n        system: \"النظام\",\n        colorScheme: \"مخطط الألوان\",\n        blue: \"أزرق\",\n        green: \"أخضر\",\n        purple: \"بنفسجي\",\n        orange: \"برتقالي\",\n        privacySecurity: \"الخصوصية والأمان\",\n        twoFactorAuthentication: \"المصادقة الثنائية\",\n        extraLayerSecurity: \"أضف طبقة أمان إضافية لحسابك\",\n        dataExport: \"تصدير البيانات\",\n        downloadHealthData: \"حمل بيانات صحتك بصيغ مختلفة\",\n        exportData: \"تصدير البيانات\",\n        deleteAccount: \"حذف الحساب\",\n        permanentlyDeleteAccount: \"احذف حسابك وبياناتك نهائياً\",\n        // Auth\n        login: \"تسجيل الدخول\",\n        register: \"التسجيل\",\n        signOut: \"تسجيل الخروج\",\n        email: \"البريد الإلكتروني\",\n        password: \"كلمة المرور\",\n        forgotPassword: \"نسيت كلمة المرور؟\",\n        rememberMe: \"تذكرني\",\n        dontHaveAccount: \"ليس لديك حساب؟\",\n        alreadyHaveAccount: \"لديك حساب بالفعل؟\",\n        createAccount: \"إنشاء حساب\",\n        signIn: \"تسجيل الدخول\",\n        welcomeBack: \"مرحباً بعودتك\",\n        signInToAccount: \"سجل الدخول إلى حسابك\",\n        createNewAccount: \"إنشاء حساب جديد\",\n        joinHealthTracker: \"انضم إلى متتبع الصحة\",\n        name: \"الاسم\",\n        enterName: \"أدخل اسمك\",\n        passwordsMustMatch: \"يجب أن تتطابق كلمات المرور\",\n        invalidEmail: \"عنوان بريد إلكتروني غير صحيح\",\n        passwordTooShort: \"يجب أن تكون كلمة المرور 6 أحرف على الأقل\",\n        accountCreated: \"تم إنشاء الحساب بنجاح\",\n        loginSuccessful: \"تم تسجيل الدخول بنجاح\",\n        logoutSuccessful: \"تم تسجيل الخروج بنجاح\",\n        // Landing Page\n        welcomeToHealthTracker: \"مرحباً بك في متتبع الصحة\",\n        comprehensiveHealthDashboard: \"لوحة تحكم شاملة لتتبع الصحة مع مراقبة فورية\",\n        realTimeMonitoring: \"مراقبة فورية\",\n        smartRecommendations: \"توصيات ذكية\",\n        mobileResponsive: \"متجاوب مع الهاتف المحمول\",\n        getStarted: \"ابدأ\",\n        learnMore: \"اعرف المزيد\",\n        features: \"الميزات\",\n        sleepTracking: \"تتبع النوم\",\n        activityTracking: \"تتبع النشاط\",\n        darkMode: \"الوضع الداكن\",\n        mobileFriendly: \"صديق للهاتف المحمول\"\n    }\n};\nfunction getTranslation(lang, key) {\n    return translations[lang][key] || key;\n}\nfunction getDirection(lang) {\n    return lang === \"ar\" ? \"rtl\" : \"ltr\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/i18n.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={686:(e,r,t)=>{var n=t(808);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},808:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(686);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcz9lNzUxIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs2ODY6KGUscix0KT0+e3ZhciBuPXQoODA4KTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDgwODplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNjg2KTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \*********************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Inter_e8ce0c', '__Inter_Fallback_e8ce0c'\",\"fontStyle\":\"normal\"},\"className\":\"__className_e8ce0c\"};\n    if(true) {\n      // 1754673762724\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwXFxcXGxheW91dC50c3hcIixcImltcG9ydFwiOlwiSW50ZXJcIixcImFyZ3VtZW50c1wiOlt7XCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwiaW50ZXJcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxnRkFBZ0Y7QUFDM0csT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQW9ILGNBQWMsc0RBQXNEO0FBQ3ROLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz9iZDYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX0ludGVyX2U4Y2UwYycsICdfX0ludGVyX0ZhbGxiYWNrX2U4Y2UwYydcIixcImZvbnRTdHlsZVwiOlwibm9ybWFsXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV9lOGNlMGNcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTc1NDY3Mzc2MjcyNFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJHOi9wcm9ncmFtbWluZy9kaWRpdG9waWEvZmlyc3Qvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCIvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/YzdhZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Capp%5Cglobals.css&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Clanguage-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Ccomponents%5Ctheme-provider.tsx&modules=G%3A%5Cprogramming%5Cdiditopia%5Cfirst%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22app%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);